import numpy as np 
import matplotlib.pyplot as plt 
import scipy.integrate as spi 

setting_value = 255
current_value = 0
error = setting_value - current_value

while error != 0:
    current_value += 1 
    error = setting_value - current_value

    # The following equations were derived previously 
    
t_span = np.array([0,20])
z = np.array([100, 0])

def state(t,z):
    
    x = z[0]
    v = z[1]
    
    # Parameters
    m = 5
    k = 1
    
    # Input
    F = 10
    
    x_prime = v
    v_prime = -(k/m)*x + F/m
    
    z_prime = [x_prime, v_prime]
    
    return z_prime

sim = spi.solve_ivp(state, t_span, z,t_eval=np.arange(0,20,.1))

def figure1():
    plt.figure()
    plt.subplot(2,1,1)
    plt.plot(sim.t, sim.y[0])
    plt.xlabel('Time (s)')
    plt.ylabel('Position (m)')
    plt.subplot(2,1,2)
    plt.plot(sim.t, sim.y[1], c="r")
    plt.xlabel('Time (s)')
    plt.ylabel('Velocity (m/s)')
    plt.show()
    
    return 

figure1()